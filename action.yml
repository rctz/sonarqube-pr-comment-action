name: SonarQube PR Comment Action
description: A GitHub Action to run a SonarQube scan and post analysis results as a comment on a pull request.
inputs:
  sonar_token:
    description: The SonarQube token.
    required: true
  sonar_host_url:
    description: The SonarQube host URL.
    required: true
  sonar_project_key:
    description: The SonarQube project key.
    required: true
  github_token:
    description: GitHub token for authentication.
    required: true
outputs:
  analysis_report:
    description: The SonarQube analysis report in formatted text.
runs:
  using: "composite"
  steps:
    # Run SonarQube Scan
    - name: Run SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_HOST_URL: ${{ inputs.sonar_host_url }}

    # Query SonarQube API
    - name: Get SonarQube Analysis
      id: get-sonarqube-analysis
      env:
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
        SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
      run: |
        RESPONSE=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$SONAR_PROJECT_KEY&pullRequest=${{ github.event.pull_request.number }}")
        echo "$RESPONSE" > sonarqube.json
        STATUS=$(jq -r '.projectStatus.status' sonarqube.json)
        CONDITIONS=$(jq -r '.projectStatus.conditions[] | "- **\(.metricKey)**: \(.status) (Threshold: \(.comparator) \(.errorThreshold), Actual: \(.actualValue))"' sonarqube.json)
        PROJECT_URL="$SONAR_HOST_URL/dashboard?id=$SONAR_PROJECT_KEY"
        COMMENT="### SonarQube Analysis Report\n**Project URL**: $PROJECT_URL"
        echo "analysis_report=$COMMENT" >> "$GITHUB_OUTPUT"
        cp sonarqube.json archetich
      shell: bash
    - name: Upload archetich file
      uses: actions/upload-artifact@v3
      with:
        name: archetich
        path: archetich

    # Post Comment to GitHub PR
    - name: Post SonarQube Report to PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ steps.get-sonarqube-analysis.outputs.analysis_report }}`
          })
